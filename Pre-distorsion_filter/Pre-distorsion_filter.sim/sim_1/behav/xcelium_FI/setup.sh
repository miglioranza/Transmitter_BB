#!/bin/bash -f
# ****************************************************************************
# Vivado (TM) v2021.2 (64-bit)
#
# Filename    : setup.sh
# Simulator   : Cadence Xcelium Parallel Simulator
# Description : Script for creating setup files and library mappings
#
# Generated by Vivado on Fri Nov 08 11:56:24 CET 2024
# SW Build 3367213 on Tue Oct 19 02:47:39 MDT 2021
#
# IP Build 3369179 on Thu Oct 21 08:25:16 MDT 2021
#
# usage: setup.sh
#
# ****************************************************************************

# Script usage
usage()
{
  msg="Usage: setup.sh [-help]\n\
Usage: setup.sh [-reset_run]\n\n\
\
[-help] -- Print help\n\n\
[-reset_run] -- Recreate simulator setup files and library mappings for a clean run. The generated files\n\
\t\tfrom the previous run will be removed automatically.\n"
  echo -e $msg
  exit 1
}

# Create design library directory paths and define design library mappings in cds.lib
create_lib_mappings()
{
  libs=(xil_defaultlib)
  file="cds.lib"
  dir="xcelium_lib"

  if [[ -e $file ]]; then
    rm -f $file
  fi
  if [[ -e $dir ]]; then
    rm -rf $dir
  fi

  touch $file
  lib_map_path="/home/miglioranza"
  incl_ref="INCLUDE $lib_map_path/cds.lib"
  echo $incl_ref >> $file
  for (( i=0; i<${#libs[*]}; i++ )); do
    lib="${libs[i]}"
    lib_dir="$dir/$lib"
    if [[ ! -e $lib_dir ]]; then
      mkdir -p $lib_dir
      mapping="DEFINE $lib $dir/$lib"
      echo $mapping >> $file
    fi
  done
}

# Delete generated files from the previous run
reset_run()
{
  files_to_remove=(xmsim.key xmvlog.log xmvhdl.log compile.log elaborate.log waves.shm)
  for (( i=0; i<${#files_to_remove[*]}; i++ )); do
    file="${files_to_remove[i]}"
    if [[ -e $file ]]; then
      rm -rf $file
    fi
  done
  rm -rf ./c.obj
  mkdir c.obj
}

setup()
{
  case $1 in
    "-reset_run" )
      reset_run
      echo -e "INFO: Simulation run files deleted.\n"
      exit 0
    ;;
    * )
    ;;
  esac

  create_lib_mappings
  touch hdl.var
  echo -e "INFO: Simulation setup files and library mappings created.\n"
  # Add any setup/initialization commands here:-
  # <user specific commands>
}

# Script info
echo -e "setup.sh - Script generated by launch_simulation (Vivado v2021.2 (64-bit)-id)\n"

# Check command line args
if [[ $# > 1 ]]; then
  echo -e "ERROR: invalid number of arguments specified\n"
  usage
fi

if [[ ($# == 1 ) && ($1 != "-reset_run" && $1 != "-help" && $1 != "-h") ]]; then
  echo -e "ERROR: unknown option specified '$1' (type "setup.sh -help" for for more info)"
  exit 1
fi

if [[ ($1 == "-help" || $1 == "-h") ]]; then
  usage
fi

# Launch script
setup $1
